Nonterminals useless in grammar

   declaration


Terminals unused in grammar

   PRINT
   IF
   ELSE
   QUOTA
   ADD
   SUB
   MUL
   DIV
   MOD
   INC
   DEC
   MT
   LT
   MTE
   LTE
   EQ
   NE
   ADDASGN
   SUBASGN
   MULASGN
   DIVASGN
   MODASGN
   AND
   OR
   NOT
   LSB
   RSB
   RETURN
   TRUE
   FALSE
   CPP_COMMENT
   C_COMMENT
   I_CONST
   F_CONST
   STR_CONST


Rules useless in grammar

   25 declaration: function_declaration


Grammar

    0 $accept: program $end

    1 program: program program_body
    2        | %empty

    3 program_body: function_declaration
    4             | function

    5 function: type ID LB parameter_list RB block_body

    6 stats: stats stat
    7      | %empty

    8 stat: while_statement
    9     | variable_declaration

   10 function_declaration: type ID LB parameter_list RB SEMICOLON

   11 variable_declaration: type ID SEMICOLON
   12                     | type ID ASGN expression SEMICOLON

   13 while_statement: WHILE LB expression RB block_body

   14 block_body: LCB stats RCB

   15 expression: %empty

   16 parameter_list: parameter
   17               | parameter_list COMMA parameter
   18               | %empty

   19 parameter: type ID

   20 type: VOID
   21     | INT
   22     | FLOAT
   23     | BOOL
   24     | STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
PRINT (258)
IF (259)
ELSE (260)
WHILE (261) 13
ID (262) 5 10 11 12 19
SEMICOLON (263) 10 11 12
COMMA (264) 17
QUOTA (265)
ADD (266)
SUB (267)
MUL (268)
DIV (269)
MOD (270)
INC (271)
DEC (272)
MT (273)
LT (274)
MTE (275)
LTE (276)
EQ (277)
NE (278)
ASGN (279) 12
ADDASGN (280)
SUBASGN (281)
MULASGN (282)
DIVASGN (283)
MODASGN (284)
AND (285)
OR (286)
NOT (287)
LB (288) 5 10 13
RB (289) 5 10 13
LCB (290) 14
RCB (291) 14
LSB (292)
RSB (293)
VOID (294) 20
FLOAT (295) 22
INT (296) 21
STRING (297) 24
BOOL (298) 23
RETURN (299)
TRUE (300)
FALSE (301)
CPP_COMMENT (302)
C_COMMENT (303)
I_CONST <i_val> (304)
F_CONST <f_val> (305)
STR_CONST <string> (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1 2, on right: 0 1
program_body (54)
    on left: 3 4, on right: 1
function (55)
    on left: 5, on right: 4
stats (56)
    on left: 6 7, on right: 6 14
stat (57)
    on left: 8 9, on right: 6
function_declaration (58)
    on left: 10, on right: 3
variable_declaration (59)
    on left: 11 12, on right: 9
while_statement (60)
    on left: 13, on right: 8
block_body (61)
    on left: 14, on right: 5 13
expression (62)
    on left: 15, on right: 12 13
parameter_list (63)
    on left: 16 17 18, on right: 5 10 17
parameter (64)
    on left: 19, on right: 16 17
type (65)
    on left: 20 21 22 23 24, on right: 5 10 11 12 19


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . program_body

    $end    shift, and go to state 2
    VOID    shift, and go to state 3
    FLOAT   shift, and go to state 4
    INT     shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    program_body          go to state 8
    function              go to state 9
    function_declaration  go to state 10
    type                  go to state 11


State 2

    0 $accept: program $end .

    $default  accept


State 3

   20 type: VOID .

    $default  reduce using rule 20 (type)


State 4

   22 type: FLOAT .

    $default  reduce using rule 22 (type)


State 5

   21 type: INT .

    $default  reduce using rule 21 (type)


State 6

   24 type: STRING .

    $default  reduce using rule 24 (type)


State 7

   23 type: BOOL .

    $default  reduce using rule 23 (type)


State 8

    1 program: program program_body .

    $default  reduce using rule 1 (program)


State 9

    4 program_body: function .

    $default  reduce using rule 4 (program_body)


State 10

    3 program_body: function_declaration .

    $default  reduce using rule 3 (program_body)


State 11

    5 function: type . ID LB parameter_list RB block_body
   10 function_declaration: type . ID LB parameter_list RB SEMICOLON

    ID  shift, and go to state 12


State 12

    5 function: type ID . LB parameter_list RB block_body
   10 function_declaration: type ID . LB parameter_list RB SEMICOLON

    LB  shift, and go to state 13


State 13

    5 function: type ID LB . parameter_list RB block_body
   10 function_declaration: type ID LB . parameter_list RB SEMICOLON

    VOID    shift, and go to state 3
    FLOAT   shift, and go to state 4
    INT     shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    $default  reduce using rule 18 (parameter_list)

    parameter_list  go to state 14
    parameter       go to state 15
    type            go to state 16


State 14

    5 function: type ID LB parameter_list . RB block_body
   10 function_declaration: type ID LB parameter_list . RB SEMICOLON
   17 parameter_list: parameter_list . COMMA parameter

    COMMA  shift, and go to state 17
    RB     shift, and go to state 18


State 15

   16 parameter_list: parameter .

    $default  reduce using rule 16 (parameter_list)


State 16

   19 parameter: type . ID

    ID  shift, and go to state 19


State 17

   17 parameter_list: parameter_list COMMA . parameter

    VOID    shift, and go to state 3
    FLOAT   shift, and go to state 4
    INT     shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    parameter  go to state 20
    type       go to state 16


State 18

    5 function: type ID LB parameter_list RB . block_body
   10 function_declaration: type ID LB parameter_list RB . SEMICOLON

    SEMICOLON  shift, and go to state 21
    LCB        shift, and go to state 22

    block_body  go to state 23


State 19

   19 parameter: type ID .

    $default  reduce using rule 19 (parameter)


State 20

   17 parameter_list: parameter_list COMMA parameter .

    $default  reduce using rule 17 (parameter_list)


State 21

   10 function_declaration: type ID LB parameter_list RB SEMICOLON .

    $default  reduce using rule 10 (function_declaration)


State 22

   14 block_body: LCB . stats RCB

    $default  reduce using rule 7 (stats)

    stats  go to state 24


State 23

    5 function: type ID LB parameter_list RB block_body .

    $default  reduce using rule 5 (function)


State 24

    6 stats: stats . stat
   14 block_body: LCB stats . RCB

    WHILE   shift, and go to state 25
    RCB     shift, and go to state 26
    VOID    shift, and go to state 3
    FLOAT   shift, and go to state 4
    INT     shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    stat                  go to state 27
    variable_declaration  go to state 28
    while_statement       go to state 29
    type                  go to state 30


State 25

   13 while_statement: WHILE . LB expression RB block_body

    LB  shift, and go to state 31


State 26

   14 block_body: LCB stats RCB .

    $default  reduce using rule 14 (block_body)


State 27

    6 stats: stats stat .

    $default  reduce using rule 6 (stats)


State 28

    9 stat: variable_declaration .

    $default  reduce using rule 9 (stat)


State 29

    8 stat: while_statement .

    $default  reduce using rule 8 (stat)


State 30

   11 variable_declaration: type . ID SEMICOLON
   12                     | type . ID ASGN expression SEMICOLON

    ID  shift, and go to state 32


State 31

   13 while_statement: WHILE LB . expression RB block_body

    $default  reduce using rule 15 (expression)

    expression  go to state 33


State 32

   11 variable_declaration: type ID . SEMICOLON
   12                     | type ID . ASGN expression SEMICOLON

    SEMICOLON  shift, and go to state 34
    ASGN       shift, and go to state 35


State 33

   13 while_statement: WHILE LB expression . RB block_body

    RB  shift, and go to state 36


State 34

   11 variable_declaration: type ID SEMICOLON .

    $default  reduce using rule 11 (variable_declaration)


State 35

   12 variable_declaration: type ID ASGN . expression SEMICOLON

    $default  reduce using rule 15 (expression)

    expression  go to state 37


State 36

   13 while_statement: WHILE LB expression RB . block_body

    LCB  shift, and go to state 22

    block_body  go to state 38


State 37

   12 variable_declaration: type ID ASGN expression . SEMICOLON

    SEMICOLON  shift, and go to state 39


State 38

   13 while_statement: WHILE LB expression RB block_body .

    $default  reduce using rule 13 (while_statement)


State 39

   12 variable_declaration: type ID ASGN expression SEMICOLON .

    $default  reduce using rule 12 (variable_declaration)
