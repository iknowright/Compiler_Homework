Terminals unused in grammar

   LSB
   RSB
   CPP_COMMENT
   C_COMMENT


State 100 conflicts: 1 shift/reduce
State 108 conflicts: 6 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program program_body
    2        | %empty

    3 program_body: function_declaration
    4             | variable_declaration
    5             | function

    6 function: type ID LB parameter_list RB block_body

    7 stats: stats stat
    8      | %empty

    9 stat: while_statement
   10     | if_statement
   11     | variable_declaration
   12     | printf_statement
   13     | expression_statement
   14     | return_statement

   15 function_call: ID LB argument_list RB

   16 argument_list: assignment_expression
   17              | argument_list COMMA assignment_expression
   18              | %empty

   19 expression_statement: assign_statement
   20                     | expression SEMICOLON
   21                     | SEMICOLON

   22 assign_statement: ID assignment_operator expression SEMICOLON

   23 return_statement: RETURN expression SEMICOLON

   24 printf_statement: PRINT LB QUOTA STR_CONST QUOTA RB SEMICOLON
   25                 | PRINT LB ID RB SEMICOLON

   26 function_declaration: type ID LB parameter_list RB SEMICOLON

   27 variable_declaration: type ID SEMICOLON
   28                     | type ID ASGN expression SEMICOLON

   29 while_statement: WHILE LB expression RB block_body

   30 if_statement: IF LB expression RB block_body ELSE block_body
   31             | IF LB expression RB block_body ELSE if_statement
   32             | IF LB expression RB block_body

   33 block_body: left_brace stats right_brace

   34 left_brace: LCB

   35 right_brace: RCB

   36 expression: assignment_expression
   37           | %empty

   38 parameter_list: parameter
   39               | parameter_list COMMA parameter
   40               | %empty

   41 parameter: type ID

   42 type: VOID
   43     | INT
   44     | FLOAT
   45     | BOOL
   46     | STRING

   47 assignment_expression: unary_expression assignment_operator assignment_expression
   48                      | logical_or_expression

   49 logical_or_expression: logical_and_expression
   50                      | logical_or_expression OR logical_and_expression

   51 logical_and_expression: relational_expression
   52                       | logical_and_expression AND relational_expression

   53 relational_expression: additive_expression
   54                      | relational_expression relational_operator additive_expression

   55 additive_expression: multiplicative_expression
   56                    | additive_expression ADD multiplicative_expression
   57                    | additive_expression SUB multiplicative_expression

   58 multiplicative_expression: unary_expression
   59                          | multiplicative_expression MUL unary_expression
   60                          | multiplicative_expression DIV unary_expression
   61                          | multiplicative_expression MOD unary_expression

   62 relational_operator: MT
   63                    | LT
   64                    | MTE
   65                    | LTE
   66                    | EQ
   67                    | NE

   68 assignment_operator: ASGN
   69                    | MULASGN
   70                    | DIVASGN
   71                    | MODASGN
   72                    | ADDASGN
   73                    | SUBASGN

   74 unary_expression: postfix_expression
   75                 | INC unary_expression
   76                 | DEC unary_expression
   77                 | unary_operator unary_expression

   78 unary_operator: SUB
   79               | ADD
   80               | NOT

   81 postfix_expression: primary_expression
   82                   | postfix_expression INC
   83                   | postfix_expression DEC

   84 primary_expression: ID
   85                   | constant
   86                   | string
   87                   | LB expression RB
   88                   | function_call

   89 string: QUOTA STR_CONST QUOTA

   90 constant: I_CONST
   91         | F_CONST
   92         | TRUE
   93         | FALSE


Terminals, with rules where they appear

$end (0) 0
error (256)
PRINT (258) 24 25
IF (259) 30 31 32
ELSE (260) 30 31
WHILE (261) 29
SEMICOLON (262) 20 21 22 23 24 25 26 27 28
COMMA (263) 17 39
QUOTA (264) 24 89
ADD (265) 56 79
SUB (266) 57 78
MUL (267) 59
DIV (268) 60
MOD (269) 61
INC (270) 75 82
DEC (271) 76 83
MT (272) 62
LT (273) 63
MTE (274) 64
LTE (275) 65
EQ (276) 66
NE (277) 67
ASGN (278) 28 68
ADDASGN (279) 72
SUBASGN (280) 73
MULASGN (281) 69
DIVASGN (282) 70
MODASGN (283) 71
AND (284) 52
OR (285) 50
NOT (286) 80
LB (287) 6 15 24 25 26 29 30 31 32 87
RB (288) 6 15 24 25 26 29 30 31 32 87
LCB (289) 34
RCB (290) 35
LSB (291)
RSB (292)
VOID (293) 42
FLOAT (294) 44
INT (295) 43
STRING (296) 46
BOOL (297) 45
RETURN (298) 23
CPP_COMMENT (299)
C_COMMENT (300)
I_CONST <i_val> (301) 90
F_CONST <f_val> (302) 91
STR_CONST <string> (303) 24 89
TRUE <i_val> (304) 92
FALSE <i_val> (305) 93
ID <string> (306) 6 15 22 25 26 27 28 41 84


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1 2, on right: 0 1
program_body (54)
    on left: 3 4 5, on right: 1
function (55)
    on left: 6, on right: 5
stats (56)
    on left: 7 8, on right: 7 33
stat (57)
    on left: 9 10 11 12 13 14, on right: 7
function_call (58)
    on left: 15, on right: 88
argument_list (59)
    on left: 16 17 18, on right: 15 17
expression_statement (60)
    on left: 19 20 21, on right: 13
assign_statement (61)
    on left: 22, on right: 19
return_statement (62)
    on left: 23, on right: 14
printf_statement (63)
    on left: 24 25, on right: 12
function_declaration (64)
    on left: 26, on right: 3
variable_declaration (65)
    on left: 27 28, on right: 4 11
while_statement (66)
    on left: 29, on right: 9
if_statement (67)
    on left: 30 31 32, on right: 10 31
block_body (68)
    on left: 33, on right: 6 29 30 31 32
left_brace (69)
    on left: 34, on right: 33
right_brace (70)
    on left: 35, on right: 33
expression (71)
    on left: 36 37, on right: 20 22 23 28 29 30 31 32 87
parameter_list <param_list> (72)
    on left: 38 39 40, on right: 6 26 39
parameter <param_list> (73)
    on left: 41, on right: 38 39
type <i_val> (74)
    on left: 42 43 44 45 46, on right: 6 26 27 28 41
assignment_expression (75)
    on left: 47 48, on right: 16 17 36 47
logical_or_expression (76)
    on left: 49 50, on right: 48 50
logical_and_expression (77)
    on left: 51 52, on right: 49 50 52
relational_expression (78)
    on left: 53 54, on right: 51 52 54
additive_expression (79)
    on left: 55 56 57, on right: 53 54 56 57
multiplicative_expression (80)
    on left: 58 59 60 61, on right: 55 56 57 59 60 61
relational_operator (81)
    on left: 62 63 64 65 66 67, on right: 54
assignment_operator (82)
    on left: 68 69 70 71 72 73, on right: 22 47
unary_expression (83)
    on left: 74 75 76 77, on right: 47 58 59 60 61 75 76 77
unary_operator (84)
    on left: 78 79 80, on right: 77
postfix_expression (85)
    on left: 81 82 83, on right: 74 82 83
primary_expression (86)
    on left: 84 85 86 87 88, on right: 81
string (87)
    on left: 89, on right: 86
constant (88)
    on left: 90 91 92 93, on right: 85


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . program_body

    $end    shift, and go to state 2
    VOID    shift, and go to state 3
    FLOAT   shift, and go to state 4
    INT     shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    program_body          go to state 8
    function              go to state 9
    function_declaration  go to state 10
    variable_declaration  go to state 11
    type                  go to state 12


State 2

    0 $accept: program $end .

    $default  accept


State 3

   42 type: VOID .

    $default  reduce using rule 42 (type)


State 4

   44 type: FLOAT .

    $default  reduce using rule 44 (type)


State 5

   43 type: INT .

    $default  reduce using rule 43 (type)


State 6

   46 type: STRING .

    $default  reduce using rule 46 (type)


State 7

   45 type: BOOL .

    $default  reduce using rule 45 (type)


State 8

    1 program: program program_body .

    $default  reduce using rule 1 (program)


State 9

    5 program_body: function .

    $default  reduce using rule 5 (program_body)


State 10

    3 program_body: function_declaration .

    $default  reduce using rule 3 (program_body)


State 11

    4 program_body: variable_declaration .

    $default  reduce using rule 4 (program_body)


State 12

    6 function: type . ID LB parameter_list RB block_body
   26 function_declaration: type . ID LB parameter_list RB SEMICOLON
   27 variable_declaration: type . ID SEMICOLON
   28                     | type . ID ASGN expression SEMICOLON

    ID  shift, and go to state 13


State 13

    6 function: type ID . LB parameter_list RB block_body
   26 function_declaration: type ID . LB parameter_list RB SEMICOLON
   27 variable_declaration: type ID . SEMICOLON
   28                     | type ID . ASGN expression SEMICOLON

    SEMICOLON  shift, and go to state 14
    ASGN       shift, and go to state 15
    LB         shift, and go to state 16


State 14

   27 variable_declaration: type ID SEMICOLON .

    $default  reduce using rule 27 (variable_declaration)


State 15

   28 variable_declaration: type ID ASGN . expression SEMICOLON

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    $default  reduce using rule 37 (expression)

    function_call              go to state 29
    expression                 go to state 30
    assignment_expression      go to state 31
    logical_or_expression      go to state 32
    logical_and_expression     go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    postfix_expression         go to state 39
    primary_expression         go to state 40
    string                     go to state 41
    constant                   go to state 42


State 16

    6 function: type ID LB . parameter_list RB block_body
   26 function_declaration: type ID LB . parameter_list RB SEMICOLON

    VOID    shift, and go to state 3
    FLOAT   shift, and go to state 4
    INT     shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    $default  reduce using rule 40 (parameter_list)

    parameter_list  go to state 43
    parameter       go to state 44
    type            go to state 45


State 17

   89 string: QUOTA . STR_CONST QUOTA

    STR_CONST  shift, and go to state 46


State 18

   79 unary_operator: ADD .

    $default  reduce using rule 79 (unary_operator)


State 19

   78 unary_operator: SUB .

    $default  reduce using rule 78 (unary_operator)


State 20

   75 unary_expression: INC . unary_expression

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    function_call       go to state 29
    unary_expression    go to state 47
    unary_operator      go to state 38
    postfix_expression  go to state 39
    primary_expression  go to state 40
    string              go to state 41
    constant            go to state 42


State 21

   76 unary_expression: DEC . unary_expression

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    function_call       go to state 29
    unary_expression    go to state 48
    unary_operator      go to state 38
    postfix_expression  go to state 39
    primary_expression  go to state 40
    string              go to state 41
    constant            go to state 42


State 22

   80 unary_operator: NOT .

    $default  reduce using rule 80 (unary_operator)


State 23

   87 primary_expression: LB . expression RB

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    $default  reduce using rule 37 (expression)

    function_call              go to state 29
    expression                 go to state 49
    assignment_expression      go to state 31
    logical_or_expression      go to state 32
    logical_and_expression     go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    postfix_expression         go to state 39
    primary_expression         go to state 40
    string                     go to state 41
    constant                   go to state 42


State 24

   90 constant: I_CONST .

    $default  reduce using rule 90 (constant)


State 25

   91 constant: F_CONST .

    $default  reduce using rule 91 (constant)


State 26

   92 constant: TRUE .

    $default  reduce using rule 92 (constant)


State 27

   93 constant: FALSE .

    $default  reduce using rule 93 (constant)


State 28

   15 function_call: ID . LB argument_list RB
   84 primary_expression: ID .

    LB  shift, and go to state 50

    $default  reduce using rule 84 (primary_expression)


State 29

   88 primary_expression: function_call .

    $default  reduce using rule 88 (primary_expression)


State 30

   28 variable_declaration: type ID ASGN expression . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 31

   36 expression: assignment_expression .

    $default  reduce using rule 36 (expression)


State 32

   48 assignment_expression: logical_or_expression .
   50 logical_or_expression: logical_or_expression . OR logical_and_expression

    OR  shift, and go to state 52

    $default  reduce using rule 48 (assignment_expression)


State 33

   49 logical_or_expression: logical_and_expression .
   52 logical_and_expression: logical_and_expression . AND relational_expression

    AND  shift, and go to state 53

    $default  reduce using rule 49 (logical_or_expression)


State 34

   51 logical_and_expression: relational_expression .
   54 relational_expression: relational_expression . relational_operator additive_expression

    MT   shift, and go to state 54
    LT   shift, and go to state 55
    MTE  shift, and go to state 56
    LTE  shift, and go to state 57
    EQ   shift, and go to state 58
    NE   shift, and go to state 59

    $default  reduce using rule 51 (logical_and_expression)

    relational_operator  go to state 60


State 35

   53 relational_expression: additive_expression .
   56 additive_expression: additive_expression . ADD multiplicative_expression
   57                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 61
    SUB  shift, and go to state 62

    $default  reduce using rule 53 (relational_expression)


State 36

   55 additive_expression: multiplicative_expression .
   59 multiplicative_expression: multiplicative_expression . MUL unary_expression
   60                          | multiplicative_expression . DIV unary_expression
   61                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 63
    DIV  shift, and go to state 64
    MOD  shift, and go to state 65

    $default  reduce using rule 55 (additive_expression)


State 37

   47 assignment_expression: unary_expression . assignment_operator assignment_expression
   58 multiplicative_expression: unary_expression .

    ASGN     shift, and go to state 66
    ADDASGN  shift, and go to state 67
    SUBASGN  shift, and go to state 68
    MULASGN  shift, and go to state 69
    DIVASGN  shift, and go to state 70
    MODASGN  shift, and go to state 71

    $default  reduce using rule 58 (multiplicative_expression)

    assignment_operator  go to state 72


State 38

   77 unary_expression: unary_operator . unary_expression

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    function_call       go to state 29
    unary_expression    go to state 73
    unary_operator      go to state 38
    postfix_expression  go to state 39
    primary_expression  go to state 40
    string              go to state 41
    constant            go to state 42


State 39

   74 unary_expression: postfix_expression .
   82 postfix_expression: postfix_expression . INC
   83                   | postfix_expression . DEC

    INC  shift, and go to state 74
    DEC  shift, and go to state 75

    $default  reduce using rule 74 (unary_expression)


State 40

   81 postfix_expression: primary_expression .

    $default  reduce using rule 81 (postfix_expression)


State 41

   86 primary_expression: string .

    $default  reduce using rule 86 (primary_expression)


State 42

   85 primary_expression: constant .

    $default  reduce using rule 85 (primary_expression)


State 43

    6 function: type ID LB parameter_list . RB block_body
   26 function_declaration: type ID LB parameter_list . RB SEMICOLON
   39 parameter_list: parameter_list . COMMA parameter

    COMMA  shift, and go to state 76
    RB     shift, and go to state 77


State 44

   38 parameter_list: parameter .

    $default  reduce using rule 38 (parameter_list)


State 45

   41 parameter: type . ID

    ID  shift, and go to state 78


State 46

   89 string: QUOTA STR_CONST . QUOTA

    QUOTA  shift, and go to state 79


State 47

   75 unary_expression: INC unary_expression .

    $default  reduce using rule 75 (unary_expression)


State 48

   76 unary_expression: DEC unary_expression .

    $default  reduce using rule 76 (unary_expression)


State 49

   87 primary_expression: LB expression . RB

    RB  shift, and go to state 80


State 50

   15 function_call: ID LB . argument_list RB

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    $default  reduce using rule 18 (argument_list)

    function_call              go to state 29
    argument_list              go to state 81
    assignment_expression      go to state 82
    logical_or_expression      go to state 32
    logical_and_expression     go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    postfix_expression         go to state 39
    primary_expression         go to state 40
    string                     go to state 41
    constant                   go to state 42


State 51

   28 variable_declaration: type ID ASGN expression SEMICOLON .

    $default  reduce using rule 28 (variable_declaration)


State 52

   50 logical_or_expression: logical_or_expression OR . logical_and_expression

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    function_call              go to state 29
    logical_and_expression     go to state 83
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 84
    unary_operator             go to state 38
    postfix_expression         go to state 39
    primary_expression         go to state 40
    string                     go to state 41
    constant                   go to state 42


State 53

   52 logical_and_expression: logical_and_expression AND . relational_expression

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    function_call              go to state 29
    relational_expression      go to state 85
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 84
    unary_operator             go to state 38
    postfix_expression         go to state 39
    primary_expression         go to state 40
    string                     go to state 41
    constant                   go to state 42


State 54

   62 relational_operator: MT .

    $default  reduce using rule 62 (relational_operator)


State 55

   63 relational_operator: LT .

    $default  reduce using rule 63 (relational_operator)


State 56

   64 relational_operator: MTE .

    $default  reduce using rule 64 (relational_operator)


State 57

   65 relational_operator: LTE .

    $default  reduce using rule 65 (relational_operator)


State 58

   66 relational_operator: EQ .

    $default  reduce using rule 66 (relational_operator)


State 59

   67 relational_operator: NE .

    $default  reduce using rule 67 (relational_operator)


State 60

   54 relational_expression: relational_expression relational_operator . additive_expression

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    function_call              go to state 29
    additive_expression        go to state 86
    multiplicative_expression  go to state 36
    unary_expression           go to state 84
    unary_operator             go to state 38
    postfix_expression         go to state 39
    primary_expression         go to state 40
    string                     go to state 41
    constant                   go to state 42


State 61

   56 additive_expression: additive_expression ADD . multiplicative_expression

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    function_call              go to state 29
    multiplicative_expression  go to state 87
    unary_expression           go to state 84
    unary_operator             go to state 38
    postfix_expression         go to state 39
    primary_expression         go to state 40
    string                     go to state 41
    constant                   go to state 42


State 62

   57 additive_expression: additive_expression SUB . multiplicative_expression

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    function_call              go to state 29
    multiplicative_expression  go to state 88
    unary_expression           go to state 84
    unary_operator             go to state 38
    postfix_expression         go to state 39
    primary_expression         go to state 40
    string                     go to state 41
    constant                   go to state 42


State 63

   59 multiplicative_expression: multiplicative_expression MUL . unary_expression

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    function_call       go to state 29
    unary_expression    go to state 89
    unary_operator      go to state 38
    postfix_expression  go to state 39
    primary_expression  go to state 40
    string              go to state 41
    constant            go to state 42


State 64

   60 multiplicative_expression: multiplicative_expression DIV . unary_expression

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    function_call       go to state 29
    unary_expression    go to state 90
    unary_operator      go to state 38
    postfix_expression  go to state 39
    primary_expression  go to state 40
    string              go to state 41
    constant            go to state 42


State 65

   61 multiplicative_expression: multiplicative_expression MOD . unary_expression

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    function_call       go to state 29
    unary_expression    go to state 91
    unary_operator      go to state 38
    postfix_expression  go to state 39
    primary_expression  go to state 40
    string              go to state 41
    constant            go to state 42


State 66

   68 assignment_operator: ASGN .

    $default  reduce using rule 68 (assignment_operator)


State 67

   72 assignment_operator: ADDASGN .

    $default  reduce using rule 72 (assignment_operator)


State 68

   73 assignment_operator: SUBASGN .

    $default  reduce using rule 73 (assignment_operator)


State 69

   69 assignment_operator: MULASGN .

    $default  reduce using rule 69 (assignment_operator)


State 70

   70 assignment_operator: DIVASGN .

    $default  reduce using rule 70 (assignment_operator)


State 71

   71 assignment_operator: MODASGN .

    $default  reduce using rule 71 (assignment_operator)


State 72

   47 assignment_expression: unary_expression assignment_operator . assignment_expression

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    function_call              go to state 29
    assignment_expression      go to state 92
    logical_or_expression      go to state 32
    logical_and_expression     go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    postfix_expression         go to state 39
    primary_expression         go to state 40
    string                     go to state 41
    constant                   go to state 42


State 73

   77 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 77 (unary_expression)


State 74

   82 postfix_expression: postfix_expression INC .

    $default  reduce using rule 82 (postfix_expression)


State 75

   83 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 83 (postfix_expression)


State 76

   39 parameter_list: parameter_list COMMA . parameter

    VOID    shift, and go to state 3
    FLOAT   shift, and go to state 4
    INT     shift, and go to state 5
    STRING  shift, and go to state 6
    BOOL    shift, and go to state 7

    parameter  go to state 93
    type       go to state 45


State 77

    6 function: type ID LB parameter_list RB . block_body
   26 function_declaration: type ID LB parameter_list RB . SEMICOLON

    SEMICOLON  shift, and go to state 94
    LCB        shift, and go to state 95

    block_body  go to state 96
    left_brace  go to state 97


State 78

   41 parameter: type ID .

    $default  reduce using rule 41 (parameter)


State 79

   89 string: QUOTA STR_CONST QUOTA .

    $default  reduce using rule 89 (string)


State 80

   87 primary_expression: LB expression RB .

    $default  reduce using rule 87 (primary_expression)


State 81

   15 function_call: ID LB argument_list . RB
   17 argument_list: argument_list . COMMA assignment_expression

    COMMA  shift, and go to state 98
    RB     shift, and go to state 99


State 82

   16 argument_list: assignment_expression .

    $default  reduce using rule 16 (argument_list)


State 83

   50 logical_or_expression: logical_or_expression OR logical_and_expression .
   52 logical_and_expression: logical_and_expression . AND relational_expression

    AND  shift, and go to state 53

    $default  reduce using rule 50 (logical_or_expression)


State 84

   58 multiplicative_expression: unary_expression .

    $default  reduce using rule 58 (multiplicative_expression)


State 85

   52 logical_and_expression: logical_and_expression AND relational_expression .
   54 relational_expression: relational_expression . relational_operator additive_expression

    MT   shift, and go to state 54
    LT   shift, and go to state 55
    MTE  shift, and go to state 56
    LTE  shift, and go to state 57
    EQ   shift, and go to state 58
    NE   shift, and go to state 59

    $default  reduce using rule 52 (logical_and_expression)

    relational_operator  go to state 60


State 86

   54 relational_expression: relational_expression relational_operator additive_expression .
   56 additive_expression: additive_expression . ADD multiplicative_expression
   57                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 61
    SUB  shift, and go to state 62

    $default  reduce using rule 54 (relational_expression)


State 87

   56 additive_expression: additive_expression ADD multiplicative_expression .
   59 multiplicative_expression: multiplicative_expression . MUL unary_expression
   60                          | multiplicative_expression . DIV unary_expression
   61                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 63
    DIV  shift, and go to state 64
    MOD  shift, and go to state 65

    $default  reduce using rule 56 (additive_expression)


State 88

   57 additive_expression: additive_expression SUB multiplicative_expression .
   59 multiplicative_expression: multiplicative_expression . MUL unary_expression
   60                          | multiplicative_expression . DIV unary_expression
   61                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 63
    DIV  shift, and go to state 64
    MOD  shift, and go to state 65

    $default  reduce using rule 57 (additive_expression)


State 89

   59 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 59 (multiplicative_expression)


State 90

   60 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 60 (multiplicative_expression)


State 91

   61 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 61 (multiplicative_expression)


State 92

   47 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 47 (assignment_expression)


State 93

   39 parameter_list: parameter_list COMMA parameter .

    $default  reduce using rule 39 (parameter_list)


State 94

   26 function_declaration: type ID LB parameter_list RB SEMICOLON .

    $default  reduce using rule 26 (function_declaration)


State 95

   34 left_brace: LCB .

    $default  reduce using rule 34 (left_brace)


State 96

    6 function: type ID LB parameter_list RB block_body .

    $default  reduce using rule 6 (function)


State 97

   33 block_body: left_brace . stats right_brace

    $default  reduce using rule 8 (stats)

    stats  go to state 100


State 98

   17 argument_list: argument_list COMMA . assignment_expression

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    function_call              go to state 29
    assignment_expression      go to state 101
    logical_or_expression      go to state 32
    logical_and_expression     go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    postfix_expression         go to state 39
    primary_expression         go to state 40
    string                     go to state 41
    constant                   go to state 42


State 99

   15 function_call: ID LB argument_list RB .

    $default  reduce using rule 15 (function_call)


State 100

    7 stats: stats . stat
   33 block_body: left_brace stats . right_brace

    PRINT      shift, and go to state 102
    IF         shift, and go to state 103
    WHILE      shift, and go to state 104
    SEMICOLON  shift, and go to state 105
    QUOTA      shift, and go to state 17
    ADD        shift, and go to state 18
    SUB        shift, and go to state 19
    INC        shift, and go to state 20
    DEC        shift, and go to state 21
    NOT        shift, and go to state 22
    LB         shift, and go to state 23
    RCB        shift, and go to state 106
    VOID       shift, and go to state 3
    FLOAT      shift, and go to state 4
    INT        shift, and go to state 5
    STRING     shift, and go to state 6
    BOOL       shift, and go to state 7
    RETURN     shift, and go to state 107
    I_CONST    shift, and go to state 24
    F_CONST    shift, and go to state 25
    TRUE       shift, and go to state 26
    FALSE      shift, and go to state 27
    ID         shift, and go to state 108

    SEMICOLON  [reduce using rule 37 (expression)]

    stat                       go to state 109
    function_call              go to state 29
    expression_statement       go to state 110
    assign_statement           go to state 111
    return_statement           go to state 112
    printf_statement           go to state 113
    variable_declaration       go to state 114
    while_statement            go to state 115
    if_statement               go to state 116
    right_brace                go to state 117
    expression                 go to state 118
    type                       go to state 119
    assignment_expression      go to state 31
    logical_or_expression      go to state 32
    logical_and_expression     go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    postfix_expression         go to state 39
    primary_expression         go to state 40
    string                     go to state 41
    constant                   go to state 42


State 101

   17 argument_list: argument_list COMMA assignment_expression .

    $default  reduce using rule 17 (argument_list)


State 102

   24 printf_statement: PRINT . LB QUOTA STR_CONST QUOTA RB SEMICOLON
   25                 | PRINT . LB ID RB SEMICOLON

    LB  shift, and go to state 120


State 103

   30 if_statement: IF . LB expression RB block_body ELSE block_body
   31             | IF . LB expression RB block_body ELSE if_statement
   32             | IF . LB expression RB block_body

    LB  shift, and go to state 121


State 104

   29 while_statement: WHILE . LB expression RB block_body

    LB  shift, and go to state 122


State 105

   21 expression_statement: SEMICOLON .

    $default  reduce using rule 21 (expression_statement)


State 106

   35 right_brace: RCB .

    $default  reduce using rule 35 (right_brace)


State 107

   23 return_statement: RETURN . expression SEMICOLON

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    $default  reduce using rule 37 (expression)

    function_call              go to state 29
    expression                 go to state 123
    assignment_expression      go to state 31
    logical_or_expression      go to state 32
    logical_and_expression     go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    postfix_expression         go to state 39
    primary_expression         go to state 40
    string                     go to state 41
    constant                   go to state 42


State 108

   15 function_call: ID . LB argument_list RB
   22 assign_statement: ID . assignment_operator expression SEMICOLON
   84 primary_expression: ID .

    ASGN     shift, and go to state 66
    ADDASGN  shift, and go to state 67
    SUBASGN  shift, and go to state 68
    MULASGN  shift, and go to state 69
    DIVASGN  shift, and go to state 70
    MODASGN  shift, and go to state 71
    LB       shift, and go to state 50

    ASGN      [reduce using rule 84 (primary_expression)]
    ADDASGN   [reduce using rule 84 (primary_expression)]
    SUBASGN   [reduce using rule 84 (primary_expression)]
    MULASGN   [reduce using rule 84 (primary_expression)]
    DIVASGN   [reduce using rule 84 (primary_expression)]
    MODASGN   [reduce using rule 84 (primary_expression)]
    $default  reduce using rule 84 (primary_expression)

    assignment_operator  go to state 124


State 109

    7 stats: stats stat .

    $default  reduce using rule 7 (stats)


State 110

   13 stat: expression_statement .

    $default  reduce using rule 13 (stat)


State 111

   19 expression_statement: assign_statement .

    $default  reduce using rule 19 (expression_statement)


State 112

   14 stat: return_statement .

    $default  reduce using rule 14 (stat)


State 113

   12 stat: printf_statement .

    $default  reduce using rule 12 (stat)


State 114

   11 stat: variable_declaration .

    $default  reduce using rule 11 (stat)


State 115

    9 stat: while_statement .

    $default  reduce using rule 9 (stat)


State 116

   10 stat: if_statement .

    $default  reduce using rule 10 (stat)


State 117

   33 block_body: left_brace stats right_brace .

    $default  reduce using rule 33 (block_body)


State 118

   20 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 125


State 119

   27 variable_declaration: type . ID SEMICOLON
   28                     | type . ID ASGN expression SEMICOLON

    ID  shift, and go to state 126


State 120

   24 printf_statement: PRINT LB . QUOTA STR_CONST QUOTA RB SEMICOLON
   25                 | PRINT LB . ID RB SEMICOLON

    QUOTA  shift, and go to state 127
    ID     shift, and go to state 128


State 121

   30 if_statement: IF LB . expression RB block_body ELSE block_body
   31             | IF LB . expression RB block_body ELSE if_statement
   32             | IF LB . expression RB block_body

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    $default  reduce using rule 37 (expression)

    function_call              go to state 29
    expression                 go to state 129
    assignment_expression      go to state 31
    logical_or_expression      go to state 32
    logical_and_expression     go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    postfix_expression         go to state 39
    primary_expression         go to state 40
    string                     go to state 41
    constant                   go to state 42


State 122

   29 while_statement: WHILE LB . expression RB block_body

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    $default  reduce using rule 37 (expression)

    function_call              go to state 29
    expression                 go to state 130
    assignment_expression      go to state 31
    logical_or_expression      go to state 32
    logical_and_expression     go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    postfix_expression         go to state 39
    primary_expression         go to state 40
    string                     go to state 41
    constant                   go to state 42


State 123

   23 return_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 131


State 124

   22 assign_statement: ID assignment_operator . expression SEMICOLON

    QUOTA    shift, and go to state 17
    ADD      shift, and go to state 18
    SUB      shift, and go to state 19
    INC      shift, and go to state 20
    DEC      shift, and go to state 21
    NOT      shift, and go to state 22
    LB       shift, and go to state 23
    I_CONST  shift, and go to state 24
    F_CONST  shift, and go to state 25
    TRUE     shift, and go to state 26
    FALSE    shift, and go to state 27
    ID       shift, and go to state 28

    $default  reduce using rule 37 (expression)

    function_call              go to state 29
    expression                 go to state 132
    assignment_expression      go to state 31
    logical_or_expression      go to state 32
    logical_and_expression     go to state 33
    relational_expression      go to state 34
    additive_expression        go to state 35
    multiplicative_expression  go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    postfix_expression         go to state 39
    primary_expression         go to state 40
    string                     go to state 41
    constant                   go to state 42


State 125

   20 expression_statement: expression SEMICOLON .

    $default  reduce using rule 20 (expression_statement)


State 126

   27 variable_declaration: type ID . SEMICOLON
   28                     | type ID . ASGN expression SEMICOLON

    SEMICOLON  shift, and go to state 14
    ASGN       shift, and go to state 15


State 127

   24 printf_statement: PRINT LB QUOTA . STR_CONST QUOTA RB SEMICOLON

    STR_CONST  shift, and go to state 133


State 128

   25 printf_statement: PRINT LB ID . RB SEMICOLON

    RB  shift, and go to state 134


State 129

   30 if_statement: IF LB expression . RB block_body ELSE block_body
   31             | IF LB expression . RB block_body ELSE if_statement
   32             | IF LB expression . RB block_body

    RB  shift, and go to state 135


State 130

   29 while_statement: WHILE LB expression . RB block_body

    RB  shift, and go to state 136


State 131

   23 return_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 23 (return_statement)


State 132

   22 assign_statement: ID assignment_operator expression . SEMICOLON

    SEMICOLON  shift, and go to state 137


State 133

   24 printf_statement: PRINT LB QUOTA STR_CONST . QUOTA RB SEMICOLON

    QUOTA  shift, and go to state 138


State 134

   25 printf_statement: PRINT LB ID RB . SEMICOLON

    SEMICOLON  shift, and go to state 139


State 135

   30 if_statement: IF LB expression RB . block_body ELSE block_body
   31             | IF LB expression RB . block_body ELSE if_statement
   32             | IF LB expression RB . block_body

    LCB  shift, and go to state 95

    block_body  go to state 140
    left_brace  go to state 97


State 136

   29 while_statement: WHILE LB expression RB . block_body

    LCB  shift, and go to state 95

    block_body  go to state 141
    left_brace  go to state 97


State 137

   22 assign_statement: ID assignment_operator expression SEMICOLON .

    $default  reduce using rule 22 (assign_statement)


State 138

   24 printf_statement: PRINT LB QUOTA STR_CONST QUOTA . RB SEMICOLON

    RB  shift, and go to state 142


State 139

   25 printf_statement: PRINT LB ID RB SEMICOLON .

    $default  reduce using rule 25 (printf_statement)


State 140

   30 if_statement: IF LB expression RB block_body . ELSE block_body
   31             | IF LB expression RB block_body . ELSE if_statement
   32             | IF LB expression RB block_body .

    ELSE  shift, and go to state 143

    $default  reduce using rule 32 (if_statement)


State 141

   29 while_statement: WHILE LB expression RB block_body .

    $default  reduce using rule 29 (while_statement)


State 142

   24 printf_statement: PRINT LB QUOTA STR_CONST QUOTA RB . SEMICOLON

    SEMICOLON  shift, and go to state 144


State 143

   30 if_statement: IF LB expression RB block_body ELSE . block_body
   31             | IF LB expression RB block_body ELSE . if_statement

    IF   shift, and go to state 103
    LCB  shift, and go to state 95

    if_statement  go to state 145
    block_body    go to state 146
    left_brace    go to state 97


State 144

   24 printf_statement: PRINT LB QUOTA STR_CONST QUOTA RB SEMICOLON .

    $default  reduce using rule 24 (printf_statement)


State 145

   31 if_statement: IF LB expression RB block_body ELSE if_statement .

    $default  reduce using rule 31 (if_statement)


State 146

   30 if_statement: IF LB expression RB block_body ELSE block_body .

    $default  reduce using rule 30 (if_statement)
